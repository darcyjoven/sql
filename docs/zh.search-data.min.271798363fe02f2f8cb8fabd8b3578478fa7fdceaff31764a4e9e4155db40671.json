[{"id":0,"href":"/docs/SQL/","title":"SQL--结构化查询语言","section":"Docs","content":"SQL 结构化查询语言\r#\r\rDDL 数据定义\r#\r\r建表（必须掌握，简单）\r#\r\r修改表（必须掌握，简单）\r#\r\r删除表（必须掌握，简单）\r#\r\r主键（一般掌握，中等）\r#\r\r索引（一般掌握，中等）\r#\r\r外键（了解，中等）\r#\r\rDML 数据操作\r#\r\r新增 （必须掌握，简单）\r#\r\r修改 （必须掌握，简单）\r#\r\r删除 （必须掌握，简单）\r#\r\rSELECT 查询\r#\r\r查询结果\u0026ndash;字段 （必须掌握，简单）\r#\r\r查询来源\u0026ndash;表 （必须掌握，简单）\r#\r\r查询条件\u0026ndash;判断语句 （必须掌握，中等）\r#\r\r查询排序\u0026ndash;ORDER BY （必须掌握，简单）\r#\r\r多表查询 （必须掌握，中等）\r#\r\r聚合 （必须掌握，中等）\r#\r\r嵌套 （一般掌握，简单）\r#\r\r常用函数 （一般掌握，中等）\r#\r\r建立视图 （必须掌握，中等）\r#\r\r修改视图 （必须掌握，中等）\r#\r\r删除视图 （必须掌握，中等）\r#\r\r"},{"id":1,"href":"/docs/SQL/hidden/","title":"SQL--结构化查询语言","section":"SQL--结构化查询语言","content":"DDL 数据定义语句\r#\r\r CREATE TABLE ** 需掌握程度 *** ALTER TABLE ** 需掌握程度 *** DROP TABLE * 需掌握程度 ** CREATE INDEX *** 需掌握程度 ** DROP INDEX * 需掌握程度 **  DML 数据操纵语句\r#\r\r  SELECT 难度 ***** 需掌握程度 ****\n 基本语法 cloumn unique/distinct where and、or、not limit order by rownum 聚合 group by min、max count、avg、sum having like (*、？) in、between 子查询（查询嵌套） exists case 别名 join  inner join left/right (outer) join full (outer) join   union (all) insert into select    UPDATE 难度 ** 需掌握程度 ****\n  DELETE 难度 * 需掌握程度 ****\n  INSERT INTO 难度 ** 需掌握程度 ****\n  MERGE 难度 *** 需掌握程度 **\n  "},{"id":2,"href":"/docs/SQL/first/DDL/","title":"DDL--数据定义言","section":"SQL--结构化查询语言","content":"DDL\u0026ndash;数据定义语言\r#\r\r 数据通过表存在数据库中 不区分大小写 表中规定每列的数据名称和数据类型 表结构影响后续数据的存储和检索  ORACLE 数据库结构\r#\r\r 库 TOPPROD 不能库之间只能通过网络通信 用户 FOREWIN 可以直接访问 表 TABLE 存储的基本单元 行 row 每个数据的最小表达方式  建立表\r#\r\rcreate student(  name varchar2(100),  age number(5),  score number(4,2),  birthday date ) 以上代码运行后创建了一个名称 student 的表，其中\n studnet 表名，在有同一个用户中，不能重名，需要满足标识符要求 name 列名，在同一个表中，不能重名，需要满足标识符要求 varchar2(100) 数据类型  oracle 数据类型\r#\r\r date 日期 number() 数字类型 number(5) 为 5 位的小数 number(5,2) 位 5 位，有 2 位小数 blob/clob 二进制大数据 varchar2(100) 长度为 100 的字符串 timestamp 时间戳 （精确到 10 位的秒）  修改表\r#\r\r已有表的修改，请注意已有资料的情况\n增加字段\r#\r\r 无论什么情况，都可以增加字段\n alter table student add (  class varchar2(20),  parent varchar2(20) ) 以上在 student 中增加了两个字段\n减少字段\r#\r\r 如果要减少的字段有任意一笔不为空的资料，不允许删除字段，所以删除字段前，需要先清空字段资料\n update student set parent = null; alter table student drop column parent;  更新字段值为null 删除字段  修改字段\r#\r\r 修改字段无论是数据类型，还是字段名称，如果已有资料也无法修改\n 通过删除字段\r#\r\r 新建临时字段存储要修改列的值 将旧字段值设置为 null 后删除 新增要新增的列 新列的值设置为临时字段 删除临时字段   此方式，最后修改的字段总是在最后\n alter table student add name2 varchar(100); update student set name2 = name; update student set name = null; alter table student drop column name; alter table student add id varchar2(100); update student set id = name2; update student set name2 = null; alter table student drop column name2; 通过重建表\r#\r\r 新建临时表存储现表资料 删除现表 重建建立表 将临时表资料储存到新表 删除临时表   此方式，字段的顺序可以受到控制\n create table student2 as select * from student; drop table student; create table student (  id varchar2(100),  age number(5),  score number(4,2),  birthday date ); insert into student select * from student2; drop table student2; 删除表\r#\r\r 删除表比较简单，但要注意备份资料\n drop table student; 主键\r#\r\r将一个或多个字段设置为主键，可以保证资料不重复。\n 一个表最多存在 1 个主键，可以没有主键。主键名和表名一样，在用户中不可重复。\n 例如：身份证，ID 号这些不重复的字段。如果是班级的话，xx 届和 xx 班，两字段加在一起这样也是不重复的。\n创建表时创建主键\r#\r\rcreate table student (  id varchar2(100),  age number(5),  score number(4,2),  birthday date,  constraint student_pk primary key(id) ) 创建表后创建主键\r#\r\rcreate table student (  id varchar2(100),  age number(5),  score number(4,2),  birthday date,  constraint student_pk primary key(id) ); alter table student add constraint student_pk primary key (id); 索引\r#\r\r 索引在表中相当于时目录，如果查询时，走索引速度提升很多。（只在巨量数据时有明显效果，数据库量不多时，没必要考虑索引）\n  查询通过索引可以提高查询速度，但会降低增删改的速度 一个表可以建立多个索引 只有数据量多的时候索引才会明显提升查询速度 只有合适的查询（SELECT）语句才能使用索引查询  创建索引\r#\r\rcreate index student_idx on student(id,age); 删除索引\r#\r\rdrop index student_idx; 重建索引\r#\r\r 删除重新创建即可\n drop index student_idx; create index student_idx on student(id,age); 外键\r#\r\r当a表c1字段必须时b表d1字段中的一个的时候，可以将c1设置为d1字段的外键。这样在新增a表资料时，c1字段会自动检查是否在b表中存在，不存在不允许新增该资料。\n 创建外键，会时两个表耦合性增加，且不利于问题排查，所以不建议使用，了解有这个东西即可。这个检查可以通过代码实现。\n 创建\r#\r\r 创建表时创建  create table class (  id number(10) ); create table student(  id number(10),  class number(10)  constraint student_fk  foreign key (class)  references parent_table (id) ); 删除\r#\r\r重建\r#\r\r"}]